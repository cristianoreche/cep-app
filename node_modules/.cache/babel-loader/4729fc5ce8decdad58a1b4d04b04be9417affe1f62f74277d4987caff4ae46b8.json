{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nconst useAddressCache = () => {\n  _s();\n  const [cache, setCache] = useState({});\n  const getCachedAddress = cep => cache[cep];\n  const cacheAddress = (cep, data) => {\n    setCache(prev => ({\n      ...prev,\n      [cep]: data\n    }));\n  };\n  return {\n    getCachedAddress,\n    cacheAddress\n  };\n};\n_s(useAddressCache, \"nnz3b5nDzkwENvMntiRONBSQHaI=\");\nexport default useAddressCache;","map":{"version":3,"names":["useState","useAddressCache","_s","cache","setCache","getCachedAddress","cep","cacheAddress","data","prev"],"sources":["/Users/cristianoreche/Documents/cep-app/src/hooks/useAddressCache.ts"],"sourcesContent":["import { useState } from 'react';\n\nconst useAddressCache = () => {\n  const [cache, setCache] = useState<{ [key: string]: any }>({});\n\n  const getCachedAddress = (cep: string) => cache[cep];\n\n  const cacheAddress = (cep: string, data: any) => {\n    setCache((prev) => ({ ...prev, [cep]: data }));\n  };\n\n  return { getCachedAddress, cacheAddress };\n};\n\nexport default useAddressCache;"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAyB,CAAC,CAAC,CAAC;EAE9D,MAAMK,gBAAgB,GAAIC,GAAW,IAAKH,KAAK,CAACG,GAAG,CAAC;EAEpD,MAAMC,YAAY,GAAGA,CAACD,GAAW,EAAEE,IAAS,KAAK;IAC/CJ,QAAQ,CAAEK,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAE,CAACH,GAAG,GAAGE;IAAK,CAAC,CAAC,CAAC;EAChD,CAAC;EAED,OAAO;IAAEH,gBAAgB;IAAEE;EAAa,CAAC;AAC3C,CAAC;AAACL,EAAA,CAVID,eAAe;AAYrB,eAAeA,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}